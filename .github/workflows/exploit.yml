name: Exploit

on:
  - push
  - pull_request

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      DOCKER_IP:

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        cd exploit && pip install -r requirements.txt

    - name: Root tar for cache
      run: |
        sudo chown root /usr/bin/tar && sudo chmod u+s /usr/bin/tar

    - name: Cache apt packages
      id: cache-apt
      uses: actions/cache@v4
      env:
        cache-name: cache-apt
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ env.cache-name }}-${{ hashFiles('.github/workflows/exploit.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-${{ env.cache-name }}-
          ${{ runner.os }}-apt-
          ${{ runner.os }}-

    - name: Install docker
      if: ${{ steps.cache-apt.outputs.cache-hit != 'true' }}
      run: |
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Build docker image
      run: |
        docker compose build

    - name: Up docker container
      run: |
        docker compose up -d
        DOCKER_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q))
        echo "Container IP: $DOCKER_IP"
        echo "DOCKER_IP=$DOCKER_IP" >> $GITHUB_ENV

    - name: Exploit
      run: |
        python exploit/exp.py '${{ env.DOCKER_IP }}'

